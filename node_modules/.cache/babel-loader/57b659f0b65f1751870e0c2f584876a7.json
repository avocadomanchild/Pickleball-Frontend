{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bench\\\\OneDrive\\\\Documents\\\\Travel App\\\\react-website-v1\\\\src\\\\components\\\\pages\\\\Login.jsx\";\n// import React, { useState } from \"react\";\n// import logo from './logo.svg';\n// import './App.css';\n\n// export const Login = (props) => {\n//     const [email, setEmail] = useState('');\n\n// import { withRouter } from 'react-router-dom';\nimport React, { Component, useContext, useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { LoginContext } from '../context_state/login_state';\n\n/// added for the state of the login \n// const {loggedIn,setLoggedIn} = useContext(LoginContext)\n\nconst initialValues = {\n  username: '',\n  password: ''\n};\nconst validationSchema = Yup.object({\n  username: Yup.string().required('Required'),\n  password: Yup.string().required('Required')\n});\nclass Login extends Component {\n  constructor() {\n    super(...arguments);\n    this.onSubmit = async (values, _ref) => {\n      let {\n        setFieldError\n      } = _ref;\n      console.log('Form data', values);\n      try {\n        const response = await axios.post('http://localhost:8080/auth', values);\n        console.log(response);\n        console.log(this.state);\n        this.props.history.push('/');\n\n        // Do something with the response\n      } catch (error) {\n        console.log(error.response.data);\n        if (error.response.data.includes(\"Invalid Password\")) {\n          setFieldError(\"password\", \"Invalid password.\");\n        } else if (error.response.data.includes(\"Invalid Password\")) {\n          setFieldError(\"password\", \"Invalid password.\");\n        } else {\n          setFieldError(\"password\", \"Invalid Password or Username.\");\n        }\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth-form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: this.onSubmit,\n      className: \"formik-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"username\",\n      id: \"username\",\n      name: \"username\",\n      placeholder: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"username\",\n      component: \"div\",\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      placeholder: \"********\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"password\",\n      component: \"div\",\n      className: \"error-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"Submit\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"link-btn\",\n      onClick: () => this.props.onFormSwitch('register'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Don't have an account? Register here.\"));\n  }\n}\nexport default withRouter(Login);\n\n// import { withRouter } from 'react-router-dom';\n// import React, { useContext } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import axios from 'axios';\n// import { LoginContext } from '../context_state/login_state';\n\n// const initialValues = {\n//   username: '',\n//   password: ''\n// };\n\n// const validationSchema = Yup.object({\n//   username: Yup.string().required('Required'),\n//   password: Yup.string().required('Required')\n// });\n\n// const Login = ({ history }) => {\n//   const { loggedIn, setLoggedIn } = useContext(LoginContext);\n\n//   const onSubmit = async (values, { setFieldError }) => {\n//     console.log('Form data', values);\n//     try {\n//       const response = await axios.post('http://localhost:8080/auth', values);\n//       console.log(response);\n\n//       console.log(this.state);\n//       history.push('/');\n\n//       // Update the context value to true\n//       setLoggedIn(true);\n//     } catch (error) {\n//       console.log(error.response.data);\n\n//       if (error.response.data.includes('Invalid Password')) {\n//         setFieldError('password', 'Invalid password.');\n//       } else if (error.response.data.includes('Invalid Password')) {\n//         setFieldError('password', 'Invalid password.');\n//       } else {\n//         setFieldError('password', 'Invalid Password or Username.');\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className=\"auth-form-container\">\n//       <h2>Login</h2>\n//       <Formik\n//         initialValues={initialValues}\n//         validationSchema={validationSchema}\n//         onSubmit={onSubmit}\n//         className=\"formik-form\"\n//       >\n//         <Form>\n//           <div className=\"form-control\">\n//             <label htmlFor=\"username\">Username</label>\n//             <Field type=\"text\" id=\"username\" name=\"username\" placeholder=\"Username\" />\n//             <ErrorMessage name=\"username\" component=\"div\" className=\"error\" />\n//           </div>\n//           <div className=\"form-control\">\n//             <label htmlFor=\"password\">Password</label>\n//             <Field type=\"password\" id=\"password\" name=\"password\" placeholder=\"********\" />\n//             <ErrorMessage name=\"password\" component=\"div\" className=\"error-password\" />\n//           </div>\n//           <button type=\"submit\">Submit</button>\n//         </Form>\n//       </Formik>\n//       <button className=\"link-btn\" onClick={() => this.props.onFormSwitch('register')}>\n//         Don't have an account? Register here.\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default withRouter(Login);","map":{"version":3,"names":["React","Component","useContext","useState","Formik","Form","Field","ErrorMessage","Yup","axios","LoginContext","initialValues","username","password","validationSchema","object","string","required","Login","constructor","arguments","onSubmit","values","_ref","setFieldError","console","log","response","post","state","props","history","push","error","data","includes","render","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","placeholder","component","onClick","onFormSwitch","withRouter"],"sources":["C:/Users/bench/OneDrive/Documents/Travel App/react-website-v1/src/components/pages/Login.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n\r\n// export const Login = (props) => {\r\n//     const [email, setEmail] = useState('');\r\n\r\n\r\n\r\n// import { withRouter } from 'react-router-dom';\r\nimport React, { Component,useContext,useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { LoginContext } from '../context_state/login_state';\r\n\r\n\r\n\r\n/// added for the state of the login \r\n// const {loggedIn,setLoggedIn} = useContext(LoginContext)\r\n\r\nconst initialValues = {\r\n\r\n  username: '',\r\n  password: ''\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  username: Yup.string().required('Required'),\r\n  password: Yup.string().required('Required')\r\n  ,\r\n});\r\n\r\nclass Login extends Component {\r\n  \r\n    onSubmit = async (values, { setFieldError }) => {\r\n        console.log('Form data', values);\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/auth', values);\r\n            console.log(response)\r\n            \r\n            console.log(this.state)\r\n            this.props.history.push('/');\r\n            \r\n            // Do something with the response\r\n            } catch (error) {\r\n              console.log(error.response.data)\r\n\r\n              if (error.response.data.includes(\"Invalid Password\")) {\r\n                setFieldError(\"password\", \"Invalid password.\");\r\n              }\r\n\r\n              else if (error.response.data.includes(\"Invalid Password\")) {\r\n                setFieldError(\"password\", \"Invalid password.\");\r\n              }\r\n\r\n              else{\r\n                setFieldError(\"password\", \"Invalid Password or Username.\");\r\n              }\r\n            }\r\n        };\r\n    render() {\r\n        return (\r\n          <div className=\"auth-form-container\">\r\n            <h2>Login</h2>\r\n            <Formik \r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={this.onSubmit}\r\n            className=\"formik-form\"\r\n            >\r\n            <Form >\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <Field type=\"username\" id=\"username\" name=\"username\"  placeholder=\"Username\"/>\r\n                <ErrorMessage name=\"username\" component=\"div\" className=\"error\"/>\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Field type=\"password\" id=\"password\" name=\"password\" placeholder=\"********\" />\r\n                <ErrorMessage name=\"password\" component=\"div\" className=\"error-password\"/>\r\n              </div>\r\n              <button  type=\"submit\">Submit</button>\r\n            </Form>\r\n          </Formik>\r\n          <button className=\"link-btn\" onClick={() => this.props.onFormSwitch('register')}>Don't have an account? Register here.</button>\r\n          </div>\r\n        );\r\n      }\r\n    } \r\nexport default withRouter(Login)\r\n\r\n\r\n// import { withRouter } from 'react-router-dom';\r\n// import React, { useContext } from 'react';\r\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// import * as Yup from 'yup';\r\n// import axios from 'axios';\r\n// import { LoginContext } from '../context_state/login_state';\r\n\r\n// const initialValues = {\r\n//   username: '',\r\n//   password: ''\r\n// };\r\n\r\n// const validationSchema = Yup.object({\r\n//   username: Yup.string().required('Required'),\r\n//   password: Yup.string().required('Required')\r\n// });\r\n\r\n// const Login = ({ history }) => {\r\n//   const { loggedIn, setLoggedIn } = useContext(LoginContext);\r\n\r\n//   const onSubmit = async (values, { setFieldError }) => {\r\n//     console.log('Form data', values);\r\n//     try {\r\n//       const response = await axios.post('http://localhost:8080/auth', values);\r\n//       console.log(response);\r\n\r\n//       console.log(this.state);\r\n//       history.push('/');\r\n\r\n//       // Update the context value to true\r\n//       setLoggedIn(true);\r\n//     } catch (error) {\r\n//       console.log(error.response.data);\r\n\r\n//       if (error.response.data.includes('Invalid Password')) {\r\n//         setFieldError('password', 'Invalid password.');\r\n//       } else if (error.response.data.includes('Invalid Password')) {\r\n//         setFieldError('password', 'Invalid password.');\r\n//       } else {\r\n//         setFieldError('password', 'Invalid Password or Username.');\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"auth-form-container\">\r\n//       <h2>Login</h2>\r\n//       <Formik\r\n//         initialValues={initialValues}\r\n//         validationSchema={validationSchema}\r\n//         onSubmit={onSubmit}\r\n//         className=\"formik-form\"\r\n//       >\r\n//         <Form>\r\n//           <div className=\"form-control\">\r\n//             <label htmlFor=\"username\">Username</label>\r\n//             <Field type=\"text\" id=\"username\" name=\"username\" placeholder=\"Username\" />\r\n//             <ErrorMessage name=\"username\" component=\"div\" className=\"error\" />\r\n//           </div>\r\n//           <div className=\"form-control\">\r\n//             <label htmlFor=\"password\">Password</label>\r\n//             <Field type=\"password\" id=\"password\" name=\"password\" placeholder=\"********\" />\r\n//             <ErrorMessage name=\"password\" component=\"div\" className=\"error-password\" />\r\n//           </div>\r\n//           <button type=\"submit\">Submit</button>\r\n//         </Form>\r\n//       </Formik>\r\n//       <button className=\"link-btn\" onClick={() => this.props.onFormSwitch('register')}>\r\n//         Don't have an account? Register here.\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default withRouter(Login);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}