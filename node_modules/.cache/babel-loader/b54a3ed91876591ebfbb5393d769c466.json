{"ast":null,"code":"// // // import React, { Component } from 'react'\n// // // import {Formik,Form,Field,ErrorMessage,useFormik} from \"formik\"\n// // // import * as Yup from 'yup'\n\n// // // const initialValues={\n// // //   name:\"\",\n// // //   email:\"\",\n// // //   channel:\"\"\n// // // }\n\n// // // const onSubmit = values => {\n// // //   console.log('Form data', values)\n// // // }\n\n// // // const validationSchema = Yup.object({\n// // //   name: Yup.string().required('Required'),\n// // //   email: Yup.string().email('Invalid email format').required('Required'),\n// // //   channel: Yup.string().required('Required')\n// // // })\n\n// // // function CodeEvolutionForm (){\n// // //   // const formik = useFormik({\n// // //   //   initialValues,\n// // //   //   onSubmit,\n// // //   //   validationSchema\n// // //     return (\n\n// // //       <Formik\n// // //       initialValues={initialValues}\n// // //       validationSchema={validationSchema}\n// // //       onSubmit={onsubmit }>\n// // //          <Form>\n// // //           <div className='form-control'>\n// // //              <Field htmlFor='email'> E-mail</Field>\n// // //              <input\n// // //              type='email'\n// // //              id='email'\n// // //              name='email'\n// // //              />\n// // //            </div>\n// // //            <button type ='submit'>Submit</button>          \n// // //          </Form>\n// // //        </Formik>\n// // //     )\n// // // }\n\n// // // export default CodeEvolutionForm\n\n// import { withRouter } from 'react-router-dom';\n// import React, { Component } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import axios from 'axios';\n\n// const initialValues = {\n\n//   username: '',\n//   email:'',\n//   password: ''\n// };\n\n// const validationSchema = Yup.object({\n\n//   username: Yup.string().required('Required'),\n//   email: Yup.string().email('Invalid email format').required('Required'),\n//   password: Yup.string().required('Required').matches(\n//     /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$/,\n//     'Please choose a stronger password.'\n//   ),\n// });\n// // const [error,setError] = useState(null)\n\n// class CodeEvolutionForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { passwordError: null };\n//   }\n\n//   onSubmit = values => {\n\n//     console.log('Form data', values);\n//     axios.post('http://localhost:8080/register', values)\n//     .then(response => {\n//       console.log(response);\n//       // Do something with the response\n//     })\n//     .catch(error => {\n//       console.log(error);\n//       console.log(error.response.data);\n//       const serverErrors = error.response.data;\n//       const passwordError = serverErrors.password;\n//       this.state({passwordError});\n//       // setError(error.response.data);\n//       // Handle errors\n\n//     });\n\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"auth-form-container\">\n//         <h2>Register</h2>\n//         <Formik \n//         initialValues={initialValues}\n//         validationSchema={validationSchema}\n//         onSubmit={this.onSubmit}\n//         className=\"formik-form\"\n\n//       >\n//         <Form >\n//           <div className=\"form-control\">\n//             <label htmlFor=\"username\">Username</label>\n//             <Field type=\"username\" id=\"username\" name=\"username\"  placeholder=\"Username\"/>\n//             <ErrorMessage name=\"username\" component=\"div\" className=\"error\"/>\n//           </div>\n//           <div className=\"form-control\">\n//             <label htmlFor=\"email\">E-mail</label>\n//             <Field type=\"email\" id=\"email\" name=\"email\" placeholder=\"youremail@gmail.com\" />\n//             <ErrorMessage name=\"email\" component=\"div\" className=\"error\"/>\n//           </div>\n//           <div className=\"form-control\">\n//             <label htmlFor=\"password\">Password</label>\n//             <Field type=\"password\" id=\"password\" name=\"password\" placeholder=\"********\" />\n//             {/* <ErrorMessage name=\"password\" component=\"div\" className=\"error-password\"/> */}\n//             <ErrorMessage name=\"password\" component=\"div\" className=\"error-password\">\n//             {(this.state.passwordError && <div>{this.state.passwordError}</div>) || null}\n//             </ErrorMessage>\n//           </div>\n//           <button type=\"submit\">Submit</button>\n//         </Form>\n//       </Formik>\n//       <button  className=\"link-btn\" onClick={() => this.props.onFormSwitch('login')}>Already have an account? Login here.</button>\n\n//       </div>\n\n//     );\n//   }\n// }\n\n// export default withRouter(CodeEvolutionForm);","map":{"version":3,"names":[],"sources":["C:/Users/bench/OneDrive/Documents/Travel App/react-website-v1/src/components/pages/CodeEvolutionForm.js"],"sourcesContent":["// // // import React, { Component } from 'react'\r\n// // // import {Formik,Form,Field,ErrorMessage,useFormik} from \"formik\"\r\n// // // import * as Yup from 'yup'\r\n\r\n// // // const initialValues={\r\n// // //   name:\"\",\r\n// // //   email:\"\",\r\n// // //   channel:\"\"\r\n// // // }\r\n\r\n// // // const onSubmit = values => {\r\n// // //   console.log('Form data', values)\r\n// // // }\r\n\r\n// // // const validationSchema = Yup.object({\r\n// // //   name: Yup.string().required('Required'),\r\n// // //   email: Yup.string().email('Invalid email format').required('Required'),\r\n// // //   channel: Yup.string().required('Required')\r\n// // // })\r\n\r\n// // // function CodeEvolutionForm (){\r\n// // //   // const formik = useFormik({\r\n// // //   //   initialValues,\r\n// // //   //   onSubmit,\r\n// // //   //   validationSchema\r\n// // //     return (\r\n    \r\n\r\n\r\n\r\n// // //       <Formik\r\n// // //       initialValues={initialValues}\r\n// // //       validationSchema={validationSchema}\r\n// // //       onSubmit={onsubmit }>\r\n// // //          <Form>\r\n// // //           <div className='form-control'>\r\n// // //              <Field htmlFor='email'> E-mail</Field>\r\n// // //              <input\r\n// // //              type='email'\r\n// // //              id='email'\r\n// // //              name='email'\r\n// // //              />\r\n// // //            </div>\r\n// // //            <button type ='submit'>Submit</button>          \r\n// // //          </Form>\r\n// // //        </Formik>\r\n// // //     )\r\n// // // }\r\n\r\n// // // export default CodeEvolutionForm\r\n\r\n// import { withRouter } from 'react-router-dom';\r\n// import React, { Component } from 'react';\r\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// import * as Yup from 'yup';\r\n// import axios from 'axios';\r\n\r\n// const initialValues = {\r\n\r\n//   username: '',\r\n//   email:'',\r\n//   password: ''\r\n// };\r\n\r\n// const validationSchema = Yup.object({\r\n \r\n//   username: Yup.string().required('Required'),\r\n//   email: Yup.string().email('Invalid email format').required('Required'),\r\n//   password: Yup.string().required('Required').matches(\r\n//     /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$/,\r\n//     'Please choose a stronger password.'\r\n//   ),\r\n// });\r\n// // const [error,setError] = useState(null)\r\n\r\n// class CodeEvolutionForm extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = { passwordError: null };\r\n//   }\r\n\r\n//   onSubmit = values => {\r\n\r\n//     console.log('Form data', values);\r\n//     axios.post('http://localhost:8080/register', values)\r\n//     .then(response => {\r\n//       console.log(response);\r\n//       // Do something with the response\r\n//     })\r\n//     .catch(error => {\r\n//       console.log(error);\r\n//       console.log(error.response.data);\r\n//       const serverErrors = error.response.data;\r\n//       const passwordError = serverErrors.password;\r\n//       this.state({passwordError});\r\n//       // setError(error.response.data);\r\n//       // Handle errors\r\n  \r\n//     });\r\n\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"auth-form-container\">\r\n//         <h2>Register</h2>\r\n//         <Formik \r\n//         initialValues={initialValues}\r\n//         validationSchema={validationSchema}\r\n//         onSubmit={this.onSubmit}\r\n//         className=\"formik-form\"\r\n  \r\n//       >\r\n//         <Form >\r\n//           <div className=\"form-control\">\r\n//             <label htmlFor=\"username\">Username</label>\r\n//             <Field type=\"username\" id=\"username\" name=\"username\"  placeholder=\"Username\"/>\r\n//             <ErrorMessage name=\"username\" component=\"div\" className=\"error\"/>\r\n//           </div>\r\n//           <div className=\"form-control\">\r\n//             <label htmlFor=\"email\">E-mail</label>\r\n//             <Field type=\"email\" id=\"email\" name=\"email\" placeholder=\"youremail@gmail.com\" />\r\n//             <ErrorMessage name=\"email\" component=\"div\" className=\"error\"/>\r\n//           </div>\r\n//           <div className=\"form-control\">\r\n//             <label htmlFor=\"password\">Password</label>\r\n//             <Field type=\"password\" id=\"password\" name=\"password\" placeholder=\"********\" />\r\n//             {/* <ErrorMessage name=\"password\" component=\"div\" className=\"error-password\"/> */}\r\n//             <ErrorMessage name=\"password\" component=\"div\" className=\"error-password\">\r\n//             {(this.state.passwordError && <div>{this.state.passwordError}</div>) || null}\r\n//             </ErrorMessage>\r\n//           </div>\r\n//           <button type=\"submit\">Submit</button>\r\n//         </Form>\r\n//       </Formik>\r\n//       <button  className=\"link-btn\" onClick={() => this.props.onFormSwitch('login')}>Already have an account? Login here.</button>\r\n\r\n//       </div>\r\n\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default withRouter(CodeEvolutionForm);\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}