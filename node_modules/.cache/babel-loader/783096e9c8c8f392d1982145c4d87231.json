{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bench\\\\OneDrive\\\\Documents\\\\Travel App\\\\react-website-v1\\\\src\\\\components\\\\pages\\\\Login.jsx\";\nimport React, { useState } from \"react\";\n// import logo from './logo.svg';\n// import './App.css';\n\nexport const Login = props => {\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(email);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"login-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    type: \"email\",\n    placeholder: \"youremail@gmail.com\",\n    id: \"email\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: pass,\n    onChange: e => setPass(e.target.value),\n    type: \"password\",\n    placeholder: \"********\",\n    id: \"password\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Log In\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"link-btn\",\n    onClick: () => props.onFormSwitch('register'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Don't have an account? Register here.\"));\n};\n\n// import { withRouter } from 'react-router-dom';\n// import React, { Component } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import axios from 'axios';\n\n// const initialValues = {\n\n//   username: '',\n//   email:'',\n//   password: ''\n// };\n\n// const validationSchema = Yup.object({\n//   username: Yup.string().required('Required'),\n//   email: Yup.string().email('Invalid email format').required('Required'),\n//   password: Yup.string().required('Required').matches(\n//     /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$/,\n//     'Please choose a stronger password.'\n//   ),\n// });\n\n// class CodeEvolutionForm extends Component {\n//   onSubmit = async (values, { setFieldError }) => {\n//     console.log('Form data', values);\n//     try {\n//       const response = await axios.post('http://localhost:8080/register', values);\n//       this.props.history.push('/');\n//       // Do something with the response\n//     } catch (error) {\n//       if (error.response && error.response.data && error.response.data.error) {\n//         const errorMessage = error.response.data.error;\n//         if (errorMessage.includes(\"Duplicate entry\") && errorMessage.includes(\"for key 'users_info.username'\")) {\n//           setFieldError(\"username\", \"Username has already been taken.\");\n//           console.log(\"Username has already been taken.\");\n//         }\n//         else if (errorMessage.includes(\"Duplicate entry\") && errorMessage.includes(\"for key 'users_info.email'\")) {\n//           setFieldError(\"email\", \"Email has already been taken.\");\n//           console.log(\"Email has already been taken.\");\n//         }\n//         else {\n//           console.log(errorMessage);\n//         }\n//       } \n//       else {\n//         console.log(error);\n//       }\n//     }\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"auth-form-container\">\n//         <h2>Register</h2>\n//         <Formik \n//         initialValues={initialValues}\n//         validationSchema={validationSchema}\n//         onSubmit={this.onSubmit}\n//         className=\"formik-form\"\n//         >\n//         <Form >\n//           <div className=\"form-control\">\n//             <label htmlFor=\"username\">Username</label>\n//             <Field type=\"username\" id=\"username\" name=\"username\"  placeholder=\"Username\"/>\n//             <ErrorMessage name=\"username\" component=\"div\" className=\"error\"/>\n//           </div>\n//           <div className=\"form-control\">\n//             <label htmlFor=\"email\">E-mail</label>\n//             <Field type=\"email\" id=\"email\" name=\"email\" placeholder=\"youremail@gmail.com\" />\n//             <ErrorMessage name=\"email\" component=\"div\" className=\"error\"/>\n//           </div>\n//           <div className=\"form-control\">\n//             <label htmlFor=\"password\">Password</label>\n//             <Field type=\"password\" id=\"password\" name=\"password\" placeholder=\"********\" />\n//             <ErrorMessage name=\"password\" component=\"div\" className=\"error-password\"/>\n//           </div>\n//           <button  type=\"submit\">Submit</button>\n//         </Form>\n//       </Formik>\n//       <button  className=\"link-btn\" onClick={() => this.props.onFormSwitch('login')}>Already have an account? Login here.</button>\n//       </div>\n//     );\n//   }\n// } \n// export default withRouter(CodeEvolutionForm);","map":{"version":3,"names":["React","useState","Login","props","email","setEmail","pass","setPass","handleSubmit","e","preventDefault","console","log","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","value","onChange","target","type","placeholder","id","name","onClick","onFormSwitch"],"sources":["C:/Users/bench/OneDrive/Documents/Travel App/react-website-v1/src/components/pages/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n\r\nexport const Login = (props) => {\r\n    const [email, setEmail] = useState('');\r\n    const [pass, setPass] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(email);\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-form-container\">\r\n            <h2>Login</h2>\r\n            <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input value={email} onChange={(e) => setEmail(e.target.value)}type=\"email\" placeholder=\"youremail@gmail.com\" id=\"email\" name=\"email\" />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input value={pass} onChange={(e) => setPass(e.target.value)} type=\"password\" placeholder=\"********\" id=\"password\" name=\"password\" />\r\n                <button type=\"submit\">Log In</button>\r\n            </form>\r\n            <button className=\"link-btn\" onClick={() => props.onFormSwitch('register')}>Don't have an account? Register here.</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n// import { withRouter } from 'react-router-dom';\r\n// import React, { Component } from 'react';\r\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// import * as Yup from 'yup';\r\n// import axios from 'axios';\r\n\r\n// const initialValues = {\r\n\r\n//   username: '',\r\n//   email:'',\r\n//   password: ''\r\n// };\r\n\r\n// const validationSchema = Yup.object({\r\n//   username: Yup.string().required('Required'),\r\n//   email: Yup.string().email('Invalid email format').required('Required'),\r\n//   password: Yup.string().required('Required').matches(\r\n//     /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$/,\r\n//     'Please choose a stronger password.'\r\n//   ),\r\n// });\r\n\r\n// class CodeEvolutionForm extends Component {\r\n//   onSubmit = async (values, { setFieldError }) => {\r\n//     console.log('Form data', values);\r\n//     try {\r\n//       const response = await axios.post('http://localhost:8080/register', values);\r\n//       this.props.history.push('/');\r\n//       // Do something with the response\r\n//     } catch (error) {\r\n//       if (error.response && error.response.data && error.response.data.error) {\r\n//         const errorMessage = error.response.data.error;\r\n//         if (errorMessage.includes(\"Duplicate entry\") && errorMessage.includes(\"for key 'users_info.username'\")) {\r\n//           setFieldError(\"username\", \"Username has already been taken.\");\r\n//           console.log(\"Username has already been taken.\");\r\n//         }\r\n//         else if (errorMessage.includes(\"Duplicate entry\") && errorMessage.includes(\"for key 'users_info.email'\")) {\r\n//           setFieldError(\"email\", \"Email has already been taken.\");\r\n//           console.log(\"Email has already been taken.\");\r\n//         }\r\n//         else {\r\n//           console.log(errorMessage);\r\n//         }\r\n//       } \r\n//       else {\r\n//         console.log(error);\r\n//       }\r\n//     }\r\n//   };\r\n  \r\n\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"auth-form-container\">\r\n//         <h2>Register</h2>\r\n//         <Formik \r\n//         initialValues={initialValues}\r\n//         validationSchema={validationSchema}\r\n//         onSubmit={this.onSubmit}\r\n//         className=\"formik-form\"\r\n//         >\r\n//         <Form >\r\n//           <div className=\"form-control\">\r\n//             <label htmlFor=\"username\">Username</label>\r\n//             <Field type=\"username\" id=\"username\" name=\"username\"  placeholder=\"Username\"/>\r\n//             <ErrorMessage name=\"username\" component=\"div\" className=\"error\"/>\r\n//           </div>\r\n//           <div className=\"form-control\">\r\n//             <label htmlFor=\"email\">E-mail</label>\r\n//             <Field type=\"email\" id=\"email\" name=\"email\" placeholder=\"youremail@gmail.com\" />\r\n//             <ErrorMessage name=\"email\" component=\"div\" className=\"error\"/>\r\n//           </div>\r\n//           <div className=\"form-control\">\r\n//             <label htmlFor=\"password\">Password</label>\r\n//             <Field type=\"password\" id=\"password\" name=\"password\" placeholder=\"********\" />\r\n//             <ErrorMessage name=\"password\" component=\"div\" className=\"error-password\"/>\r\n//           </div>\r\n//           <button  type=\"submit\">Submit</button>\r\n//         </Form>\r\n//       </Formik>\r\n//       <button  className=\"link-btn\" onClick={() => this.props.onFormSwitch('login')}>Already have an account? Login here.</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// } \r\n// export default withRouter(CodeEvolutionForm);"],"mappings":"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"},"metadata":{},"sourceType":"module"}