{"ast":null,"code":"// import React, { useState } from \"react\";\n// // import logo from './logo.svg';\n// // import './App.css';\n\n// export const Login = (props) => {\n//     const [email, setEmail] = useState('');\n//     const [pass, setPass] = useState('');\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         console.log(email);\n//     }\n\n//     return (\n//         <div className=\"auth-form-container\">\n//             <h2>Login</h2>\n//             <form className=\"login-form\" onSubmit={handleSubmit}>\n//                 <label htmlFor=\"email\">Email</label>\n//                 <input value={email} onChange={(e) => setEmail(e.target.value)}type=\"email\" placeholder=\"youremail@gmail.com\" id=\"email\" name=\"email\" />\n//                 <label htmlFor=\"password\">Password</label>\n//                 <input value={pass} onChange={(e) => setPass(e.target.value)} type=\"password\" placeholder=\"********\" id=\"password\" name=\"password\" />\n//                 <button type=\"submit\">Log In</button>\n//             </form>\n//             <button className=\"link-btn\" onClick={() => props.onFormSwitch('register')}>Don't have an account? Register here.</button>\n//         </div>\n//     )\n// }\n\n// import { withRouter } from 'react-router-dom';\n// import React, { Component } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import axios from 'axios';\n\n// const initialValues = {\n\n//   username: '',\n//   password: ''\n// };\n\n// const validationSchema = Yup.object({\n//   username: Yup.string().required('Required'),\n//   password: Yup.string().required('Required').matches(\n//     /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$/,\n//     'Please choose a stronger password.'\n//   ),\n// });\n\n// class Login extends Component {\n//   onSubmit = async (values, { setFieldError }) => {\n//     console.log('Form data', values);\n//     try {\n//       const response = await axios.get('http://localhost:8080/Login', values);\n//       this.props.history.push('/');\n//       // Do something with the response\n//     } catch (error) {\nconsole.log(error);\n//       if (error.response && error.response.data && error.response.data.error) {\n//         const errorMessage = error.response.data.error;\n//         if (errorMessage.includes(\"Duplicate entry\") && errorMessage.includes(\"for key 'users_info.username'\")) {\n//           setFieldError(\"username\", \"Username has already been taken.\");\n//           console.log(\"Username has already been taken.\");\n//         }\n//         else if (errorMessage.includes(\"Duplicate entry\") && errorMessage.includes(\"for key 'users_info.email'\")) {\n//           setFieldError(\"email\", \"Email has already been taken.\");\n//           console.log(\"Email has already been taken.\");\n//         }\n//         else {\n//           console.log(errorMessage);\n//         }\n//       } \n//       else {\n//         console.log(error);\n//       }\n//     }\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"auth-form-container\">\n//         <h2></h2>\n//         <Formik \n//         initialValues={initialValues}\n//         validationSchema={validationSchema}\n//         onSubmit={this.onSubmit}\n//         className=\"formik-form\"\n//         >\n//         <Form >\n//           <div className=\"form-control\">\n//             <label htmlFor=\"username\">Username</label>\n//             <Field type=\"username\" id=\"username\" name=\"username\"  placeholder=\"Username\"/>\n//             <ErrorMessage name=\"username\" component=\"div\" className=\"error\"/>\n//           </div>\n//           <div className=\"form-control\">\n//             <label htmlFor=\"password\">Password</label>\n//             <Field type=\"password\" id=\"password\" name=\"password\" placeholder=\"********\" />\n//             <ErrorMessage name=\"password\" component=\"div\" className=\"error-password\"/>\n//           </div>\n//           <button  type=\"submit\">Submit</button>\n//         </Form>\n//       </Formik>\n//       <button  className=\"link-btn\" onClick={() => this.props.onFormSwitch('login')}>Already have an account? Login here.</button>\n//       </div>\n//     );\n//   }\n// } \n// export default withRouter(Login);","map":{"version":3,"names":["console","log","error"],"sources":["C:/Users/bench/OneDrive/Documents/Travel App/react-website-v1/src/components/pages/Login.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// // import logo from './logo.svg';\r\n// // import './App.css';\r\n\r\n// export const Login = (props) => {\r\n//     const [email, setEmail] = useState('');\r\n//     const [pass, setPass] = useState('');\r\n\r\n//     const handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         console.log(email);\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"auth-form-container\">\r\n//             <h2>Login</h2>\r\n//             <form className=\"login-form\" onSubmit={handleSubmit}>\r\n//                 <label htmlFor=\"email\">Email</label>\r\n//                 <input value={email} onChange={(e) => setEmail(e.target.value)}type=\"email\" placeholder=\"youremail@gmail.com\" id=\"email\" name=\"email\" />\r\n//                 <label htmlFor=\"password\">Password</label>\r\n//                 <input value={pass} onChange={(e) => setPass(e.target.value)} type=\"password\" placeholder=\"********\" id=\"password\" name=\"password\" />\r\n//                 <button type=\"submit\">Log In</button>\r\n//             </form>\r\n//             <button className=\"link-btn\" onClick={() => props.onFormSwitch('register')}>Don't have an account? Register here.</button>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n\r\n// import { withRouter } from 'react-router-dom';\r\n// import React, { Component } from 'react';\r\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// import * as Yup from 'yup';\r\n// import axios from 'axios';\r\n\r\n// const initialValues = {\r\n\r\n//   username: '',\r\n//   password: ''\r\n// };\r\n\r\n// const validationSchema = Yup.object({\r\n//   username: Yup.string().required('Required'),\r\n//   password: Yup.string().required('Required').matches(\r\n//     /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$/,\r\n//     'Please choose a stronger password.'\r\n//   ),\r\n// });\r\n\r\n// class Login extends Component {\r\n//   onSubmit = async (values, { setFieldError }) => {\r\n//     console.log('Form data', values);\r\n//     try {\r\n    //       const response = await axios.get('http://localhost:8080/Login', values);\r\n    //       this.props.history.push('/');\r\n    //       // Do something with the response\r\n    //     } catch (error) {\r\n             console.log(error)\r\n    //       if (error.response && error.response.data && error.response.data.error) {\r\n    //         const errorMessage = error.response.data.error;\r\n    //         if (errorMessage.includes(\"Duplicate entry\") && errorMessage.includes(\"for key 'users_info.username'\")) {\r\n    //           setFieldError(\"username\", \"Username has already been taken.\");\r\n    //           console.log(\"Username has already been taken.\");\r\n    //         }\r\n    //         else if (errorMessage.includes(\"Duplicate entry\") && errorMessage.includes(\"for key 'users_info.email'\")) {\r\n    //           setFieldError(\"email\", \"Email has already been taken.\");\r\n    //           console.log(\"Email has already been taken.\");\r\n    //         }\r\n    //         else {\r\n    //           console.log(errorMessage);\r\n    //         }\r\n    //       } \r\n    //       else {\r\n    //         console.log(error);\r\n    //       }\r\n    //     }\r\n    //   };\r\n    \r\n\r\n\r\n    //   render() {\r\n    //     return (\r\n    //       <div className=\"auth-form-container\">\r\n    //         <h2></h2>\r\n    //         <Formik \r\n    //         initialValues={initialValues}\r\n    //         validationSchema={validationSchema}\r\n    //         onSubmit={this.onSubmit}\r\n    //         className=\"formik-form\"\r\n    //         >\r\n    //         <Form >\r\n    //           <div className=\"form-control\">\r\n    //             <label htmlFor=\"username\">Username</label>\r\n    //             <Field type=\"username\" id=\"username\" name=\"username\"  placeholder=\"Username\"/>\r\n    //             <ErrorMessage name=\"username\" component=\"div\" className=\"error\"/>\r\n    //           </div>\r\n    //           <div className=\"form-control\">\r\n    //             <label htmlFor=\"password\">Password</label>\r\n    //             <Field type=\"password\" id=\"password\" name=\"password\" placeholder=\"********\" />\r\n    //             <ErrorMessage name=\"password\" component=\"div\" className=\"error-password\"/>\r\n    //           </div>\r\n    //           <button  type=\"submit\">Submit</button>\r\n    //         </Form>\r\n    //       </Formik>\r\n    //       <button  className=\"link-btn\" onClick={() => this.props.onFormSwitch('login')}>Already have an account? Login here.</button>\r\n    //       </div>\r\n    //     );\r\n    //   }\r\n    // } \r\n    // export default withRouter(Login);"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACSA,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}