{"ast":null,"code":"// import React, { useState } from \"react\";\n// // import logo from './logo.svg';\n// // import './App.css';\n\n// export const Login = (props) => {\n//     const [email, setEmail] = useState('');\n\n// import { withRouter } from 'react-router-dom';\n// import React, { Component,useContext,useState } from 'react';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import axios from 'axios';\n// import { LoginContext } from '../context_state/login_state';\n\n// /// added for the state of the login \n// const {loggedIn,setLoggedIn} = useContext(LoginContext)\n\n// const initialValues = {\n\n//   username: '',\n//   password: ''\n// };\n\n// const validationSchema = Yup.object({\n//   username: Yup.string().required('Required'),\n//   password: Yup.string().required('Required')\n//   ,\n// });\n\n// class Login extends Component {\n\n//     onSubmit = async (values, { setFieldError }) => {\n//         console.log('Form data', values);\n//         try {\n//             const response = await axios.post('http://localhost:8080/auth', values);\n//             console.log(response)\n\n//             console.log(this.state)\n//             this.props.history.push('/');\n\n//             // Do something with the response\n//             } catch (error) {\n//               console.log(error.response.data)\n\n//               if (error.response.data.includes(\"Invalid Password\")) {\n//                 setFieldError(\"password\", \"Invalid password.\");\n//               }\n\n//               else if (error.response.data.includes(\"Invalid Password\")) {\n//                 setFieldError(\"password\", \"Invalid password.\");\n//               }\n\n//               else{\n//                 setFieldError(\"password\", \"Invalid Password or Username.\");\n//               }\n//             }\n//         };\n//     render() {\n//         return (\n//           <div className=\"auth-form-container\">\n//             <h2>Login</h2>\n//             <Formik \n//             initialValues={initialValues}\n//             validationSchema={validationSchema}\n//             onSubmit={this.onSubmit}\n//             className=\"formik-form\"\n//             >\n//             <Form >\n//               <div className=\"form-control\">\n//                 <label htmlFor=\"username\">Username</label>\n//                 <Field type=\"username\" id=\"username\" name=\"username\"  placeholder=\"Username\"/>\n//                 <ErrorMessage name=\"username\" component=\"div\" className=\"error\"/>\n//               </div>\n//               <div className=\"form-control\">\n//                 <label htmlFor=\"password\">Password</label>\n//                 <Field type=\"password\" id=\"password\" name=\"password\" placeholder=\"********\" />\n//                 <ErrorMessage name=\"password\" component=\"div\" className=\"error-password\"/>\n//               </div>\n//               <button  type=\"submit\">Submit</button>\n//             </Form>\n//           </Formik>\n//           <button className=\"link-btn\" onClick={() => this.props.onFormSwitch('register')}>Don't have an account? Register here.</button>\n//           </div>\n//         );\n//       }\n//     } \n// export default withRouter(Login)","map":{"version":3,"names":[],"sources":["C:/Users/bench/OneDrive/Documents/Travel App/react-website-v1/src/components/pages/Login.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// // import logo from './logo.svg';\r\n// // import './App.css';\r\n\r\n// export const Login = (props) => {\r\n//     const [email, setEmail] = useState('');\r\n\r\n\r\n\r\n// import { withRouter } from 'react-router-dom';\r\n// import React, { Component,useContext,useState } from 'react';\r\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// import * as Yup from 'yup';\r\n// import axios from 'axios';\r\n// import { LoginContext } from '../context_state/login_state';\r\n\r\n\r\n\r\n// /// added for the state of the login \r\n// const {loggedIn,setLoggedIn} = useContext(LoginContext)\r\n\r\n// const initialValues = {\r\n\r\n//   username: '',\r\n//   password: ''\r\n// };\r\n\r\n// const validationSchema = Yup.object({\r\n//   username: Yup.string().required('Required'),\r\n//   password: Yup.string().required('Required')\r\n//   ,\r\n// });\r\n\r\n// class Login extends Component {\r\n  \r\n//     onSubmit = async (values, { setFieldError }) => {\r\n//         console.log('Form data', values);\r\n//         try {\r\n//             const response = await axios.post('http://localhost:8080/auth', values);\r\n//             console.log(response)\r\n            \r\n//             console.log(this.state)\r\n//             this.props.history.push('/');\r\n            \r\n//             // Do something with the response\r\n//             } catch (error) {\r\n//               console.log(error.response.data)\r\n\r\n//               if (error.response.data.includes(\"Invalid Password\")) {\r\n//                 setFieldError(\"password\", \"Invalid password.\");\r\n//               }\r\n\r\n//               else if (error.response.data.includes(\"Invalid Password\")) {\r\n//                 setFieldError(\"password\", \"Invalid password.\");\r\n//               }\r\n\r\n//               else{\r\n//                 setFieldError(\"password\", \"Invalid Password or Username.\");\r\n//               }\r\n//             }\r\n//         };\r\n//     render() {\r\n//         return (\r\n//           <div className=\"auth-form-container\">\r\n//             <h2>Login</h2>\r\n//             <Formik \r\n//             initialValues={initialValues}\r\n//             validationSchema={validationSchema}\r\n//             onSubmit={this.onSubmit}\r\n//             className=\"formik-form\"\r\n//             >\r\n//             <Form >\r\n//               <div className=\"form-control\">\r\n//                 <label htmlFor=\"username\">Username</label>\r\n//                 <Field type=\"username\" id=\"username\" name=\"username\"  placeholder=\"Username\"/>\r\n//                 <ErrorMessage name=\"username\" component=\"div\" className=\"error\"/>\r\n//               </div>\r\n//               <div className=\"form-control\">\r\n//                 <label htmlFor=\"password\">Password</label>\r\n//                 <Field type=\"password\" id=\"password\" name=\"password\" placeholder=\"********\" />\r\n//                 <ErrorMessage name=\"password\" component=\"div\" className=\"error-password\"/>\r\n//               </div>\r\n//               <button  type=\"submit\">Submit</button>\r\n//             </Form>\r\n//           </Formik>\r\n//           <button className=\"link-btn\" onClick={() => this.props.onFormSwitch('register')}>Don't have an account? Register here.</button>\r\n//           </div>\r\n//         );\r\n//       }\r\n//     } \r\n// export default withRouter(Login)"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}