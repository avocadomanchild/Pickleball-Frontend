{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bench\\\\OneDrive\\\\Documents\\\\Travel App\\\\react-website-v1\\\\src\\\\components\\\\pages\\\\Login.jsx\";\n// import React, { useState } from \"react\";\n// // import logo from './logo.svg';\n// // import './App.css';\n\n// export const Login = (props) => {\n//     const [email, setEmail] = useState('');\n//     const [pass, setPass] = useState('');\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         console.log(email);\n//     }\n\n//     return (\n//         <div className=\"auth-form-container\">\n//             <h2>Login</h2>\n//             <form className=\"login-form\" onSubmit={handleSubmit}>\n//                 <label htmlFor=\"email\">Email</label>\n//                 <input value={email} onChange={(e) => setEmail(e.target.value)}type=\"email\" placeholder=\"youremail@gmail.com\" id=\"email\" name=\"email\" />\n//                 <label htmlFor=\"password\">Password</label>\n//                 <input value={pass} onChange={(e) => setPass(e.target.value)} type=\"password\" placeholder=\"********\" id=\"password\" name=\"password\" />\n//                 <button type=\"submit\">Log In</button>\n//             </form>\n//             <button className=\"link-btn\" onClick={() => props.onFormSwitch('register')}>Don't have an account? Register here.</button>\n//         </div>\n//     )\n// }\n\nimport { withRouter } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nconst initialValues = {\n  username: '',\n  password: ''\n};\nconst validationSchema = Yup.object({\n  username: Yup.string().required('Required'),\n  password: Yup.string().required('Required')\n});\nclass Login extends Component {\n  constructor() {\n    super(...arguments);\n    this.onSubmit = async (values, _ref) => {\n      let {\n        setFieldError\n      } = _ref;\n      console.log('Form data', values);\n      try {\n        const response = await axios.post('http://localhost:8080/auth', values);\n        console.log(response);\n        this.props.history.push('/');\n        // Do something with the response\n      } catch (error) {\n        console.log(error.response.data);\n        if (error.response.data.includes(\"Invalid Password\")) {\n          setFieldError(\"password\", \"Invalid password.\");\n        } else if (error.response.data.includes(\"Invalid Password\")) {\n          setFieldError(\"password\", \"Invalid password.\");\n        } else {}\n        // if (error.response.data) {\n        //       const errorMessage = error.response.data.error;\n        //       if (errorMessage.includes(\"Invalid Username\")) {\n        //       setFieldError(\"username\", error.response.data);\n        //       }  \n        //     }\n        // else if (error.response && error.response.data && error.response.data.error) {\n        //   const errorMessage = error.response.data.error;\n        //   if (errorMessage.includes(\"Password\")) {\n        //   setFieldError(\"password\", \"Invalid Password .\");\n        //   }  \n        // }\n        // else {\n        //   setFieldError(\"username\", \"Shit Code.\");\n\n        // }\n\n        //   console.log(error)\n        //   console.log(\"here\")\n        //   setFieldError(\"password\",)\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth-form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: this.onSubmit,\n      className: \"formik-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"username\",\n      id: \"username\",\n      name: \"username\",\n      placeholder: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"username\",\n      component: \"div\",\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      placeholder: \"********\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"password\",\n      component: \"div\",\n      className: \"error-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"Submit\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"link-btn\",\n      onClick: () => this.props.onFormSwitch('register'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"Don't have an account? Register here.\"));\n  }\n}\nexport default withRouter(Login);","map":{"version":3,"names":["withRouter","React","Component","Formik","Form","Field","ErrorMessage","Yup","axios","initialValues","username","password","validationSchema","object","string","required","Login","constructor","arguments","onSubmit","values","_ref","setFieldError","console","log","response","post","props","history","push","error","data","includes","render","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","placeholder","component","onClick","onFormSwitch"],"sources":["C:/Users/bench/OneDrive/Documents/Travel App/react-website-v1/src/components/pages/Login.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// // import logo from './logo.svg';\r\n// // import './App.css';\r\n\r\n// export const Login = (props) => {\r\n//     const [email, setEmail] = useState('');\r\n//     const [pass, setPass] = useState('');\r\n\r\n//     const handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         console.log(email);\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"auth-form-container\">\r\n//             <h2>Login</h2>\r\n//             <form className=\"login-form\" onSubmit={handleSubmit}>\r\n//                 <label htmlFor=\"email\">Email</label>\r\n//                 <input value={email} onChange={(e) => setEmail(e.target.value)}type=\"email\" placeholder=\"youremail@gmail.com\" id=\"email\" name=\"email\" />\r\n//                 <label htmlFor=\"password\">Password</label>\r\n//                 <input value={pass} onChange={(e) => setPass(e.target.value)} type=\"password\" placeholder=\"********\" id=\"password\" name=\"password\" />\r\n//                 <button type=\"submit\">Log In</button>\r\n//             </form>\r\n//             <button className=\"link-btn\" onClick={() => props.onFormSwitch('register')}>Don't have an account? Register here.</button>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nconst initialValues = {\r\n\r\n  username: '',\r\n  password: ''\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  username: Yup.string().required('Required'),\r\n  password: Yup.string().required('Required')\r\n  ,\r\n});\r\n\r\nclass Login extends Component {\r\n    onSubmit = async (values, { setFieldError }) => {\r\n        console.log('Form data', values);\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/auth', values);\r\n            console.log(response)\r\n            this.props.history.push('/');\r\n            // Do something with the response\r\n            } catch (error) {\r\n              console.log(error.response.data)\r\n\r\n              if (error.response.data.includes(\"Invalid Password\")) {\r\n                setFieldError(\"password\", \"Invalid password.\");\r\n              }\r\n\r\n              else if (error.response.data.includes(\"Invalid Password\")) {\r\n                setFieldError(\"password\", \"Invalid password.\");\r\n              }\r\n\r\n              else{\r\n\r\n              }\r\n              // if (error.response.data) {\r\n              //       const errorMessage = error.response.data.error;\r\n              //       if (errorMessage.includes(\"Invalid Username\")) {\r\n              //       setFieldError(\"username\", error.response.data);\r\n              //       }  \r\n              //     }\r\n              // else if (error.response && error.response.data && error.response.data.error) {\r\n              //   const errorMessage = error.response.data.error;\r\n              //   if (errorMessage.includes(\"Password\")) {\r\n              //   setFieldError(\"password\", \"Invalid Password .\");\r\n              //   }  \r\n              // }\r\n              // else {\r\n              //   setFieldError(\"username\", \"Shit Code.\");\r\n                \r\n              // }\r\n\r\n      \r\n              //   console.log(error)\r\n              //   console.log(\"here\")\r\n              //   setFieldError(\"password\",)\r\n            }\r\n        };\r\n    render() {\r\n        return (\r\n          <div className=\"auth-form-container\">\r\n            <h2>Login</h2>\r\n            <Formik \r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={this.onSubmit}\r\n            className=\"formik-form\"\r\n            >\r\n            <Form >\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <Field type=\"username\" id=\"username\" name=\"username\"  placeholder=\"Username\"/>\r\n                <ErrorMessage name=\"username\" component=\"div\" className=\"error\"/>\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Field type=\"password\" id=\"password\" name=\"password\" placeholder=\"********\" />\r\n                <ErrorMessage name=\"password\" component=\"div\" className=\"error-password\"/>\r\n              </div>\r\n              <button  type=\"submit\">Submit</button>\r\n            </Form>\r\n          </Formik>\r\n          <button className=\"link-btn\" onClick={() => this.props.onFormSwitch('register')}>Don't have an account? Register here.</button>\r\n          </div>\r\n        );\r\n      }\r\n    } \r\nexport default withRouter(Login)"],"mappings":"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"},"metadata":{},"sourceType":"module"}